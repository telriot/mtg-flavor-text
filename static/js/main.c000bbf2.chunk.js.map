{"version":3,"sources":["contexts/CardContext.js","contexts/ThemeContext.js","components/CardWC.js","components/ButtonWC.js","components/GuessLink.js","components/Background.js","App.js","index.js"],"names":["CardContext","createContext","CardContextProvider","props","useState","card","setCard","count","setCount","isLoading","setIsLoading","Provider","value","children","ThemeContext","ThemeContextProvider","randomcolor","randomColor","luminosity","color","setColor","CardText","styled","div","CardWC","useContext","useEffect","a","async","axios","get","response","data","flavor_text","toString","replace","isCancel","fetchRandomCard","style","size","Button","button","ButtonWC","backgroundColor","onClick","Link","GuessLink","console","log","related_uris","gatherer","href","BackgroundDiv","Background","backgroundSize","GlobalStyle","createGlobalStyle","Container","App","ReactDOM","render","document","getElementById"],"mappings":"4OAEaA,EAAcC,0BAgBZC,EAda,SAAAC,GAAU,IAAD,EACXC,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,OAETF,mBAAS,GAFA,mBAE5BG,EAF4B,KAErBC,EAFqB,OAGDJ,oBAAS,GAHR,mBAG5BK,EAH4B,KAGjBC,EAHiB,KAKnC,OACE,kBAACV,EAAYW,SAAb,CACEC,MAAO,CAAEP,OAAMC,UAASC,QAAOC,WAAUC,YAAWC,iBAEnDP,EAAMU,W,gBCVAC,EAAeb,0BAabc,EAXc,SAAAZ,GAC3B,IAAMa,EAAcC,sBAAY,CAAEC,WAAY,SADV,EAEVd,mBAASY,GAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAIpC,OACE,kBAACN,EAAaH,SAAd,CAAuBC,MAAO,CAAEO,QAAOC,aACpCjB,EAAMU,W,mLCHb,IAAMQ,EAAWC,IAAOC,IAAV,KAyDCC,MAnDf,WAAmB,IAAD,EAC0CC,qBACxDzB,GADMK,EADQ,EACRA,KAAMC,EADE,EACFA,QAASC,EADP,EACOA,MAAOE,EADd,EACcA,UAAWC,EADzB,EACyBA,aADzB,EAIYe,qBAAWX,GAA/BK,EAJQ,EAIRA,MAAOC,EAJC,EAIDA,SAkCf,OA9BAM,qBAAU,YACR,mBAAAC,EAAAC,OAAA,uDACElB,GAAa,GADf,oBAAAiB,EAAA,MAI2BE,IAAMC,IAPvB,mDAGV,OAIUC,EAJV,OAMIzB,EAAQ,eACHyB,EAASC,KADP,CAELC,YAAaF,EAASC,KAAKC,YACxBC,WACAC,QAAQ,KAAM,IACdA,QAAQ,YAAQ,OAXzB,oDAcQN,IAAMO,SAAN,MAdR,4DAoBE1B,GAAa,GApBf,wDAsBA2B,KACC,CAAC9B,EAAOD,EAASI,IAEpBgB,qBAAU,WACRN,EAASH,IAAY,CAAEC,WAAY,YAClC,CAACX,IAGF,6BACE,kBAACc,EAAD,CAAUiB,MAAO,CAAEnB,MAAOA,KACT,IAAdV,EACC,kBAAC,aAAD,CAAY8B,KAAM,GAAIpB,MAAOA,IAE7Bd,EAAK4B,e,8SCpDf,IAAMO,EAASlB,IAAOmB,OAAV,KA8BGC,MAdf,WAAqB,IACXvB,EAAUM,qBAAWX,GAArBK,MADU,EAEUM,qBAAWzB,GAA/BO,EAFU,EAEVA,MAAOC,EAFG,EAEHA,SAEf,OACE,kBAACgC,EAAD,CACEF,MAAO,CAAEK,gBAAiBxB,GAC1ByB,QAAS,kBAAMpC,EAASD,EAAQ,KAFlC,0B,iNCtBJ,IAAMsC,EAAOvB,IAAOK,EAAV,KAyBKmB,MAhBf,WAAsB,IACZzC,EAASoB,qBAAWzB,GAApBK,KACAc,EAAUM,qBAAWX,GAArBK,MAER,OADAd,GAAQ0C,QAAQC,IAAI3C,EAAK4C,aAAaC,UAEpC,6BACE,kBAACL,EAAD,CACEP,MAAO,CAAEnB,MAAOA,GAChBgC,KAAM9C,EAAOA,EAAK4C,aAAaC,SAAW,IAF5C,+B,yFChBN,IAAME,EAAgB9B,IAAOC,IAAV,KAaJ8B,MAVf,WAAuB,IACblC,EAAUM,qBAAWX,GAArBK,MAER,OACE,kBAACiC,EAAD,CACEd,MAAO,CAAEgB,eAAgB,QAASX,gBAAiBxB,M,8dCHzD,IAAMoC,EAAcC,YAAH,KASXC,EAAYnC,IAAOC,IAAV,KA+BAmC,EAhBH,WACV,OACE,kBAAC,EAAD,KACE,kBAACH,EAAD,MACA,kBAAC,EAAD,MACA,kBAACE,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCtCVE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c000bbf2.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\"\n\nexport const CardContext = createContext()\n\nconst CardContextProvider = props => {\n  const [card, setCard] = useState(\"\")\n  const [count, setCount] = useState(0)\n  const [isLoading, setIsLoading] = useState(false)\n\n  return (\n    <CardContext.Provider\n      value={{ card, setCard, count, setCount, isLoading, setIsLoading }}\n    >\n      {props.children}\n    </CardContext.Provider>\n  )\n}\n\nexport default CardContextProvider\n","import React, { createContext, useState } from \"react\"\nimport { randomColor } from \"randomcolor\"\n\nexport const ThemeContext = createContext()\n\nconst ThemeContextProvider = props => {\n  const randomcolor = randomColor({ luminosity: \"dark\" })\n  const [color, setColor] = useState(randomcolor)\n\n  return (\n    <ThemeContext.Provider value={{ color, setColor }}>\n      {props.children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport default ThemeContextProvider\n","import React, { useEffect, useContext } from \"react\"\nimport { CardContext } from \"../contexts/CardContext\"\nimport { ThemeContext } from \"../contexts/ThemeContext\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport { SyncLoader } from \"react-spinners\"\nimport randomColor from \"randomcolor\"\n\nconst CardText = styled.div`\n  font-size: 1.8em;\n  display: inline-block\n  margin: 2.4em 2em 1em 2em;\n`\n\nfunction CardWC() {\n  const { card, setCard, count, isLoading, setIsLoading } = useContext(\n    CardContext\n  )\n  const { color, setColor } = useContext(ThemeContext)\n\n  const URL = \"https://api.scryfall.com/cards/random?q=ft:\\\\w\"\n\n  useEffect(() => {\n    async function fetchRandomCard() {\n      setIsLoading(true)\n\n      try {\n        const response = await axios.get(URL)\n\n        setCard({\n          ...response.data,\n          flavor_text: response.data.flavor_text\n            .toString()\n            .replace(/\"/g, \"\")\n            .replace(/\\â€”.*/, \"\")\n        })\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          //request cancelled\n        } else {\n          throw error\n        }\n      }\n      setIsLoading(false)\n    }\n    fetchRandomCard()\n  }, [count, setCard, setIsLoading])\n\n  useEffect(() => {\n    setColor(randomColor({ luminosity: \"dark\" }))\n  }, [count])\n\n  return (\n    <div>\n      <CardText style={{ color: color }}>\n        {isLoading === true ? (\n          <SyncLoader size={10} color={color} />\n        ) : (\n          card.flavor_text\n        )}\n      </CardText>\n    </div>\n  )\n}\n\nexport default CardWC\n","import React, { useContext } from \"react\"\nimport { CardContext } from \"../contexts/CardContext\"\nimport { ThemeContext } from \"../contexts/ThemeContext\"\nimport styled from \"styled-components\"\nimport randomColor from \"randomcolor\"\n\nconst Button = styled.button`\n  color: white\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 0;\n  padding: 0.8em\n  border-radius: 3px;\n  :hover {\n    color: white;\n    filter: invert(15%);\n  }\n  :focus { \n      outline: none\n  }\n`\nfunction ButtonWC() {\n  const { color } = useContext(ThemeContext)\n  const { count, setCount } = useContext(CardContext)\n\n  return (\n    <Button\n      style={{ backgroundColor: color }}\n      onClick={() => setCount(count + 1)}\n    >\n      Get a new flavor text\n    </Button>\n  )\n}\n\nexport default ButtonWC\n","import React, { useContext } from \"react\"\nimport { CardContext } from \"../contexts/CardContext\"\nimport { ThemeContext } from \"../contexts/ThemeContext\"\nimport styled from \"styled-components\"\n\nconst Link = styled.a`\n  text-decoration: none;\n  display: inline-block\n  margin-bottom: 1em;\n  font-size: 0.8em;\n  :hover {\n    filter: invert(30%);\n  }\n`\nfunction GuessLink() {\n  const { card } = useContext(CardContext)\n  const { color } = useContext(ThemeContext)\n  card && console.log(card.related_uris.gatherer)\n  return (\n    <div>\n      <Link\n        style={{ color: color }}\n        href={card ? card.related_uris.gatherer : \"\"}\n      >\n        Link to the original card\n      </Link>\n    </div>\n  )\n}\n\nexport default GuessLink\n","import React, { useContext } from \"react\"\nimport { ThemeContext } from \"../contexts/ThemeContext\"\nimport styled from \"styled-components\"\n\nconst BackgroundDiv = styled.div`\n  height: 100vh;\n`\nfunction Background() {\n  const { color } = useContext(ThemeContext)\n\n  return (\n    <BackgroundDiv\n      style={{ backgroundSize: \"cover\", backgroundColor: color }}\n    ></BackgroundDiv>\n  )\n}\n\nexport default Background\n","import React from \"react\"\nimport CardWC from \"./components/CardWC\"\nimport styled, { createGlobalStyle } from \"styled-components\"\nimport CardContextProvider from \"./contexts/CardContext\"\nimport ButtonWC from \"./components/ButtonWC\"\nimport GuessLink from \"./components/GuessLink\"\nimport ThemeContextProvider from \"./contexts/ThemeContext\"\nimport Background from \"./components/Background\"\n\nconst GlobalStyle = createGlobalStyle`\n\nbody {\n  margin: 0px;\n  padding: 0px;\n  width: 100%;\n  height: 100%;\n}\n`\nconst Container = styled.div`\n  font-family: Arial;\n  display: inline-block;\n  width: 500px;\n  text-align: center;\n  margin: 0;\n  border-radius: 4px;\n  background-color: #f5f5f5;\n  margin: 0;\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -40%);\n`\n\nconst App = () => {\n  return (\n    <ThemeContextProvider>\n      <GlobalStyle />\n      <Background />\n      <Container>\n        <CardContextProvider>\n          <CardWC />\n          <ButtonWC />\n          <GuessLink />\n        </CardContextProvider>\n      </Container>\n    </ThemeContextProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}